{"version":3,"sources":["AddCategory.js","GifGridItem.js","GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","GifGrid","category","images","setImages","useEffect","getFigs","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","downsized_medium","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAiB7C,OACI,mCACE,sBAAMC,SAXS,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,MAAI,CAACP,MACvBC,EAAc,MAMd,SACE,uBACIO,KAAK,OAELC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,8BCPlBG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACjC,OACI,sBAAKC,UAAU,OAAf,UACC,kCAAKF,EAAL,OACA,qBAAKG,IAAMF,EAAQG,IAAKJ,QCDpBK,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAGTpB,mBAAS,IAHA,mBAG9BqB,EAH8B,KAGtBC,EAHsB,KAMrCC,qBAAU,WACNC,MACD,IAGH,IAAMA,EAAO,uCAAG,oCAAAC,EAAA,6DACNV,EADM,iDAC0CW,UAAUN,GADpD,+DAEYO,MAAMZ,GAFlB,cAENa,EAFM,gBAGWA,EAAUC,OAHrB,gBAGJC,EAHI,EAGJA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRpB,MAAOmB,EAAInB,MACXC,IAAG,UAAEkB,EAAIZ,cAAN,aAAE,EAAYc,iBAAiBpB,QAK1CO,EAAUS,GAfE,4CAAH,qDAkBb,OACI,qCACI,mCAAMX,EAAN,OACA,qBAAKJ,UAAU,YAAf,SAEQK,EAAOW,KAAI,SAAA5B,GAAC,OACR,cAAC,EAAD,eAEQA,GADCA,EAAE8B,aCjBpBE,EAlBM,WAAO,IAAD,EACapC,mBAAS,CAAC,gBADvB,mBAChBqC,EADgB,KACJtC,EADI,KAEvB,OACI,qCACI,uDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEQsC,EAAWL,KAAI,SAAA5B,GAAC,OACZ,cAAC,EAAD,CAEEgB,SAAYhB,GADLA,U,MCTjCkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6f444e4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n          setCategories(cats => [inputValue]);\r\n          setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                // placeholder = \"Escribe aqui\"\r\n                value= {inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n          </form>\r\n        </>\r\n    )\r\n}\r\n","export const GifGridItem = ({ title, url})=>  {\r\n    return (\r\n        <div className='card'>\r\n         <p> {title} </p>\r\n         <img src={ url }   alt={title}/>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // declarar constante y metodo set\r\n    const [images, setImages] = useState([]);\r\n\r\n    // metodo que solo carga una vez al iniciar el sistema\r\n    useEffect(() => {\r\n        getFigs();\r\n    }, [])\r\n\r\n    // metodo para obtener imagenes de aplicacion de terceros (giphy)\r\n    const getFigs = async () => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZKIuEzmGSPpk5A84BXZAx3k7d9wJIHCu`;\r\n        const respuesta = await fetch(url);\r\n        const { data } = await respuesta.json();\r\n\r\n        // metodo que modifica el objeto con los valores deseados\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        // asigana valor a constante images\r\n        setImages(gifs);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(e => (\r\n                        <GifGridItem\r\n                            key={e.id}\r\n                            {...e}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball']);   \r\n    return (\r\n        <>\r\n            <h2>MINI MUES ESTA AQUI  </h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr/>\r\n                {\r\n                    categories.map(e => (\r\n                        <GifGrid\r\n                          key = {e}\r\n                          category = {e}\r\n                        />        \r\n                    ))\r\n                }\r\n        </>\r\n    );\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}